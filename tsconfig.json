{
  "compilerOptions": {
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "target": "ESNext",
    /* Control what method is used to detect module-format JS files. */
    "moduleDetection": "auto",
    /* Specify what module code is generated. */
    "module": "ESNext",
    /* Specify how TypeScript looks up a file from a given module specifier. */
    "moduleResolution": "node",
    /* Specify the base directory to resolve non-relative module names. */
    "baseUrl": "./",
    /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "paths": {},
    /* Specify type package names to be included without being referenced in a source file. */
    // "types": [],
    /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */
    // "allowImportingTsExtensions": true,
    /* Use the package.json 'exports' field when resolving package imports. */
    // "resolvePackageJsonExports": true,
    /* Use the package.json 'imports' field when resolving imports. */
    // "resolvePackageJsonImports": true,
    /* Enable importing .json files. */
    "resolveJsonModule": true,
    /* Enable importing files with any extension, provided a declaration file is present. */
    // "allowArbitraryExtensions": true,
    /* Create source map files for emitted JavaScript files. */
    "sourceMap": true,
    /* Disable emitting files from a compilation. */
    "noEmit": true,
    /* Ensure that each file can be safely transpiled without relying on other imports. */
    "isolatedModules": true,
    /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "esModuleInterop": true,
    /* Ensure that casing is correct in imports. */
    "forceConsistentCasingInFileNames": true,
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    // "noImplicitAny": true,
    /* When type checking, take into account 'null' and 'undefined'. */
    "strictNullChecks": true,
    /* Skip type checking all .d.ts files. */
    "skipLibCheck": true
  },
  "include": [
    "**/*.ts",
  ],
}
